//#define _CRT_SECURE_NO_WARNINGS
//#define N 10
#define M 1000

#include <iostream>
#include <string>
#include <stdio.h>
#include <conio.h>
#include <time.h>
#include <Windows.h>

using namespace std;
int main() {
	setlocale(LC_ALL, "rus");
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);

	/*Общие задания

	Задание 1

	Напишите программу, которая использует для хранения значений 8-ми флагов переменную размером
	в 1 байт (char или bool). Изначально все флаги должны быть выключены (равны 0). 
	Считывайте с клавиатуры числа от 1 до 8, которые говорят, какой из флагов переключить 
	(если он равен 0, то сделать 1, иначе сделать 0). После каждого такого изменения 
	выводить текущее состояние флагов в виде перечислений значений битов (начальное состояние – 00000000).

	Задание 2

	Напишите функцию, выполняющую перевод положительного целого числа из десятичной в двоичную форму, 
	используя логические операции, и возвращает результат в виде строки.

	Проще всего для решения данной задачи использовать операции сдвига << и &. 
	Так как известно из скольких бит состоит целое число (для работы с системами с разной 
	разрядностью для определения используем sizeof(int)*8 ), мы можем пройтись по всему числу
	начиная с первого разряда с помощью операции сдвига <<1, проверяя каждый разряд операцией &. 
	Для этого нам понадобится переменная целого типа, изначально равная 1, на которую мы будем в 
	цикле применять операцию сдвига. Выглядеть это будет подобным образом:

	unsigned int a = 7; //число, которое переводится в двоичный код
	unsigned int p = 1; // переменная для проверки разрядов
	int size = sizeof(int)*8; // количество бит в числе

	for(int i=0; i<size; i++)
	{
		if(a&p) 
			cout<<1;
		else 
			cout<<0; // проверка разряда
		p = p<<1; // сдвиг единицы влево для проверки следующего разряда
	}

	Число в данном случае выводится в консоль, при этом оно будет инвертированным, 
	и будут выведены лишние нули перед числом. Теперь необходимо переделать данный код под функцию,
	которая будет выводить двоичный код в строку, убирать лишние нули из нее и 
	возвращать строку в качестве результата.*/



}